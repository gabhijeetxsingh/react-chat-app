{"ast":null,"code":"var _jsxFileName = \"/home/ronins/learning/react-chat-app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages.js\"; //import TextContainer from \"../TextContainer/TextContainer\";\n\nimport \"./Chat.css\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsersAvailable] = useState([]);\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {//alert(error)\n    });\n    setName(name);\n    setRoom(room);\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => {\n        console.log(messages);\n        setMessage(\"\");\n        setUsersAvailable(\"\");\n      });\n    }\n  };\n\n  console.log(message, messages, users);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/ronins/learning/react-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsersAvailable","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages.js\";\n//import TextContainer from \"../TextContainer/TextContainer\";\nimport \"./Chat.css\"\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [users, setUsersAvailable] = useState([]);\n    const ENDPOINT = \"localhost:5000\";\n\n\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search);\n        \n        socket = io(ENDPOINT);\n\n        socket.emit(\"join\", {name, room}, () => {\n            //alert(error)\n        })\n        setName(name);\n        setRoom(room);\n\n        return () => {\n            socket.emit(\"disconnect\");\n            socket.off()\n        }\n\n    },[ENDPOINT, location.search])\n    \n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message])\n        })\n    },[messages])\n\n    const sendMessage = event => {\n\n        event.preventDefault();\n\n        if(message) {\n            socket.emit(\"sendMessage\", message, () => {\n                console.log(messages)\n                setMessage(\"\")\n                setUsersAvailable(\"\")\n            })\n        }\n    }\n    console.log(message, messages, users)\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room}/>\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n            </div>\n            {/* <TextContainer users={users}/> */}\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}
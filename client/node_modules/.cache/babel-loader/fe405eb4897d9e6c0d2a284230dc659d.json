{"ast":null,"code":"var _jsxFileName = \"/home/ronins/learning/react-chat-app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {//alert(error)\n    });\n    setName(name);\n    setRoom(room);\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === \"Enter\" ? sendMessage(event) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \"/>\"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/ronins/learning/react-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,QAAQ,GAAG,gBAAjB;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACM,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AAEAb,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AAEAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAACX,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAkC,MAAM,CACpC;AACH,KAFD;AAGAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAKH,GAhBQ,EAgBP,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAhBO,CAAT;AAkBAhB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT;;AAMA,QAAMQ,WAAW,GAAGC,KAAK,IAAI;AAEzBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGZ,OAAH,EAAY;AACRP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAPD;;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AACA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAEF,OADX;AAEI,IAAA,QAAQ,EAAGW,KAAD,IAAWV,UAAU,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAFnC;AAGI,IAAA,UAAU,EAAEL,KAAK,IAAIA,KAAK,CAACM,GAAN,KAAc,OAAd,GAAwBP,WAAW,CAACC,KAAD,CAAnC,GAA6C,IAHtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OADJ,CADJ;AAWH,CAtDD;;AAwDA,eAAejB,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport \"./Chat.css\"\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = \"localhost:5000\";\n\n\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search);\n        \n        socket = io(ENDPOINT);\n\n        socket.emit(\"join\", {name, room}, () => {\n            //alert(error)\n        })\n        setName(name);\n        setRoom(room);\n\n        return () => {\n            socket.emit(\"disconnect\");\n            socket.off()\n        }\n\n    },[ENDPOINT, location.search])\n    \n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message])\n        })\n    },[messages])\n\n    const sendMessage = event => {\n\n        event.preventDefault();\n\n        if(message) {\n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"))\n        }\n    }\n    console.log(message, messages)\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <input \n                    value={message} \n                    onChange={(event) => setMessage(event.target.value)} \n                    onKeyPress={event => event.key === \"Enter\" ? sendMessage(event) : null} />\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}